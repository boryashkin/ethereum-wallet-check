version: "3.3"

networks:
  eth-backend:
    external:
      name: eth-backend

services:
  eth-composer:
    image: composer:latest
    working_dir: "/app"
    volumes:
      - ./app:/app
    command: "install --ignore-platform-reqs"
  eth-listener:
    build: "./docker/php7.3-alpine-mysql"
    env_file:
      - .env
    volumes:
      - ./app:/app
    working_dir: "/app"
    entrypoint: ["php", "etherium-listener.php"]
    restart: on-failure
    depends_on:
      - eth-composer
      - eth-mysql
    networks:
      - eth-backend
  eth-transaction-handler:
    build: "./docker/php7.3-alpine-mysql"
    env_file:
      - .env
    volumes:
      - ./app:/app
    working_dir: "/app"
    entrypoint: ["php", "transaction-handler.php"]
    restart: on-failure
    depends_on:
      - eth-mysql
    networks:
      - eth-backend
  eth-web-nginx:
    image: nginx
    volumes:
      - "./docker/etc/nginx/default.conf:/etc/nginx/conf.d/default.template"
      - "./app:/var/www/html"
    ports:
      - "9883:80"
    environment:
      - NGINX_HOST=${NGINX_HOST_API}
    command: /bin/bash -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    restart: always
    depends_on:
      - eth-web-client
    networks:
      - eth-backend
  eth-web-client:
    build: "./docker/php7.3-fpm-alpine-mysql"
    env_file:
      - .env
    volumes:
      - "./app:/var/www/html"
    working_dir: "/app"
    restart: on-failure
    depends_on:
      - eth-mysql
    networks:
      - eth-backend
  eth-mysql:
    image: mysql:8.0.18
    container_name: ${MYSQL_HOST}
    command: --default-authentication-plugin=mysql_native_password
    restart: on-failure
    volumes:
      - ./data/db/mysql:/var/lib/mysql
      - /data/init/mysql:/docker-entrypoint-initdb.d/:ro
    environment:
      MYSQL_DATABASE: ${MYSQL_DB}
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - eth-backend